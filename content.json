{"pages":[{"title":"categories","text":"","link":"/categories/index.html"},{"title":"tags","text":"","link":"/tags/index.html"},{"title":"about","text":"","link":"/about/index.html"}],"posts":[{"title":"深入浅出统计学","text":"Σ = 求和σ = 标准差σ² = 方差（Σx²）/n - μ² = 方差Σ(x - μ)² / n = 方差z = 标准分z = （x - μ）/ σP(A) + P(A’) = 1P(A|B) = P(A∩B) / P(B) 可以得出如下（– 已知B确定发生的条件下A的概率）P(A|B)=P(A)P(B|A)/P(B) 再可以得出如下 P(A|B)=P(A)P(B|A)/ P(A)P(B|A) + P(A’)P(B|A’) – 贝叶斯公式 排列关注顺序 n p r = n!/(n-r)! 组合不关注顺序n C r = n!/r!(n-r)! 几何分布 Geometric distributionP(x=r) = q的r-1次方 - p(成功的概率)p(x&gt;r) = q的r次方p（x &gt;= r） = 1 - p(x&gt;r)E(x) = 1/pvar(x) = q/（p的平方） 二项分布P(x=r) = n C r p的r次方 q的n-r次方E(x) = npvar(x) = npq 泊松分布P(x=r) = (e的-λ次方 * λ的r次方) / r!E(x) = λvar(x) = λ 正态分布 标准分z = （x - μ）/ σ 查表查出正态分布概率","link":"/2019/01/22/hello-world/"},{"title":"webSpider","text":"URL和URIURL 是 U阳的子集，也就是说每个 URL 都是 URI，但不是每个 URI 都是 URL。 那么，怎样的 URI不是 U也 呢? u阳还包括一个子类叫作 URN，它的全称为 Universal Resource Name，即统一资 源、名称 HTTP和HTTPSHTTPS是HTTP的安全版。建立一个信息安全通道来保证数据传输的安全。确认网站的真实性，凡是使用了 HTTPS 的网站，都可以通过点击浏览器地址栏的锁头标志来。查看网站认证之后的真实信息，也可以通过 CA机构颁发的安全签章来查询。 GET和POST的主要区别GET请求中的参数包含在 URL里面，数据可以在 URL中看到，而 POST请求的 URL不会包 含这些数据，数据都是通过表单形式传输的，会包含在请求体中。GET请求提交的数据最多只有 1024字节，而 POST方式没有限制。 所有请求方法 get 请求页面，并返回页面内容 head 类似于 GET请求，只不过返回的响应中没有具体的内容，用于获取报头 post 大多用于提交表单或上传文件，数据包含在请求体中 put 从客户端向服务器传送的数据取代指定文梢中的内容 delete 请求服务器删除指定的页面 connect 把服务器当作跳板，让服务器代替客户端防问其他网页 option 允许客户端查看服务器的性能 trace 囚显服务器收到的请求，主要用于测试或诊断 请求头请求头，用来说明服务器要使用的附加信息，比较重要的信息有 Cookie、 Referer、 User-Agent等。 下面简要说明一些常用的头信息。 Accept:请求报头域，用于指定客户端可接受哪些类型的信息。 Accept-Language:指定客户端可接受的语言类型 。 Accept-Encoding:指定客户端可接受的内容编码。 Host:用于指定请求资源的主机 IP 和端口号，其内容为请求 URL 的原始服务器或网关的位置。 从HTTP1.l版本开始，请求必须包含此内容。 Cookie:也常用复数形式 Cookies，这是网站为了辨别用户进行会话跟踪而存储在用户本地的数据 。 它的主要功能是维持当前访问会话 。 例如，我们输入用户名和密码成功登录某个网 站后，服务器会用会话保存登录状态信息，后面我们每次刷新或请求该站点的其他页面时， 会发现都是登录状态，这就是 Cookies 的功劳。 Cookies里有信息标识了我们所对应的服务器 的会话，每次浏览器在请求该站点的页面时，都会在请求头中加上 Cookies 并将其发送给服 务器，服务器通过 Cookies 识别出是我们自己，并且查出当前状态是登录状态，所以返回结 果就是登录之后才能看到的网页内容 。 Referer:此内容用来标识这个请求是从哪个页面发过来的，服务器可以拿到这一信息并做相 应的处理，如做来源统计、防盗链处理等 。 User-Agent:简称 UA，它是一个特殊的字符串头，可以使服务器识别客户使用的操作系统及版本 、 浏览器及版本等信息 。 在做爬虫时加上此信息，可以伪装为浏览器;如果不加，很可能会被识别州为爬虫 。 Content-Type:也叫互联网媒体类型( Internet Media Type )或者 MIME类型，在 HTTP协议消息头中，它用来表示具体请求中的媒体类型信息 。 例如， text/html 代表 HTML 格式， image/gif代表 GIF 图片， application/json代表 JSON类型，更多对应关系可以查看此对照表 : http://tool.oschina.neνcommons。 请求体请求体-般承载的内容是 POST请求中的表单数据，而对于 GET请求，请求体则为空 。 Content-Type 提交数据的方式 application/x-www-forrn-urlencoded 表单数据 multi part/form-data 表单文件上传 application/json 序列化json数据 text/xml xml数据 在爬虫中，如果要构造 POST请求，需要使用正确的 Content-Type，并了解各种请求库的各个参 数设置时使用的是哪种 Content-Type， 不然可能会导致 POST提交后无法正常响应。 响应响应，由服务端返回给客户端，可以分为三部分:响应状态码( Response Status Code )、响应头( Response Headers )和响应体( Response Body )。 响应码 1xx 收到http请求，正在进行下一步处理 2xx 成功类，请求被接收，理解和处理 3xx 重定向类，必须采取进一步行动 4xx 客户端错误，客户端提交的请求包含语法错误或者不能正确执行 5xx 服务器端错误， 服务器不能正确执行一个正确的请求（网络问题等） 响应体最重要的当属响应体的内容了。 响应的正文数据都在响应体中，比如请求网页时，它的响应体就 是网页的 HTML代码;请求一张图片时， 它的响应体就是图片的二进制数据。我们做爬虫请求网页后，要解析的内容就是响应体，","link":"/2019/01/29/webSpider/"},{"title":"mysql","text":"通配符wildcard(*) means zero, one, multiple characters, performance not so goodunderscore(_) only 1 character.AND is high priority with OR REGEXP:. any single character.| stand for OR[123] stand for 1 or 2 or 3 same with [1-3]\\. means find .\\f 换页 form feed \\n 换行line feed \\r 回车 carriage return \\t tab制表 \\v 纵向制表 vertical tab[:alnum:] 任意字母数字 [:alpha:] 任意字母 [:digit:] 任意数字 重复字符： 0或者多 1 或者多 ? 0或者1 {n} 重复n次 {n,m} 重复范围 ^ start of the text $ end of the text 大小写不敏感除非用binary COUNT(*) 不忽略null count（column） 忽略null MAX() 对text，返回排名最后的textMIN()对text，返回排名最前的text 表的联结SELECT vend_name, prod_name, prod_priceFROM vendors, productsWHERE vendors.vend_id = products.vend_idORDER BY vend_name, prod_name;完全相等如下SELECT vend_name, prod_name, prod_priceFROM vendors inner join productson vendors.vend_id = products.vend_idORDER BY vend_name, prod_name; DB引擎常用MyISAM(支持全文本搜索，不支持事务)and InnoDB（不支持全本文搜索，支持事务）全文本搜索语法： SELECT note_text FROM productnotes WHERE MATCH(note_text) Against(‘rabbit’);布尔文本搜索 不包含rope SELECT note_text FROM productnotes WHERE MATCH(note_text) against(‘heavy -rope*’ in boolean MODE); 存储过程encapsulating processes into a single easy-to-use simple, high performance, security第一步 命令行：delimiter语法：CREATE PROCEDURE productpricing(OUT pl DECIMAL(8,2),OUT pa DECIMAL(8,2),OUT ph DECIMAL(8,2))BEGINSELECT MIN(prod_price) INTO pl FROM products;SELECT AVG(prod_price) INTO pa FROM products;SELECT MAX(prod_price) INTO ph FROM products;END 参数（in，out，inout）call productpricing(@pricelow @priceaverage @pricehigh);select @priceaverage; 游标 cursordefine:Sometimes there is a need to step through rows forward or backward and one or more at a time. This is what cursors are used for. 语法：create procedure processorder() begin declare ordernumbers cursor for select order_num from orders; end; open processorder; close processorder; 触发器 triggerdefine you want a statement to be executed automatically when events occur. 语法 CREATE TRIGGER 触发器名 BEFORE|AFTER 触发事件ON 表名 FOR EACH ROWBEGIN 执行语句列表END 事务原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）、持久性（Durability） 存储函数语法如下： CREATE FUNCTION isodd(input_number int) RETURNS intBEGIN DECLARE v_isodd INT; IF MOD(input_number,2)=0 THEN SET v_isodd=FALSE; ELSE SET v_isodd=TRUE; END IF; RETURN(v_isodd);END ;必须返回datatype，只能返回一个值，参数不能选择in，out,inout 变量局部变量– declare语句专门用于定义局部变量，可以使用default来说明默认值declare age int default 0;– 局部变量的赋值方式一set age=18;– 局部变量的赋值方式二select StuAgeinto agefrom demo.studentwhere StuNo=’A001’;用户变量set @age:=20;– 第二种用法，使用select时必须用“:=”赋值符号赋值select @age:=22;会话变量set auto_increment_increment=3;SET SESSION A = VALUE;全局变量SET GLOBAL sort_buffer_size=value; 三大范式normalizationfirst ruleEach table cell should contain a single value.Each record needs to be unique.second ruleRule 1- Be in 1NFRule 2- Single Column Primary Keythird ruleRule 1- Be in 2NFRule 2- Has no transitive functional dependencies","link":"/2019/01/24/mysql/"},{"title":"linux","text":"mkdir [-mp]目录名称选项与参数：-m ：设定档案的权限喔！直接设定，不需要看预设权限(umask)的脸色～-p ：帮助你直接将所需要的目录(包含上层目录)递回建立起来！ [root@study ~]# pwd [-P]选项与参数：-P ：显示出确实的路径，而非使用连结(link)路径。 [root@study ~]# rmdir [-p]目录名称选项与参数：-p ：连同『上层』『空的』目录也一起删除 [root@study ~]# ls [-aAdfFhilnrRSt]档名或目录名称..[root@study ~]# ls [–color={never,auto,always}]档名或目录名称..[root@ study ~]# ls [–full-time]档名或目录名称.. 选项与参数： -a ：全部的档案，连同隐藏档(开头为.的档案)一起列出来(常用)-A ：全部的档案，连同隐藏档，但不包括.与..这两个目录-d ：仅列出目录本身，而不是列出目录内的档案资料(常用)-f ：直接列出结果，而不进行排序(ls预设会以档名排序！)-F ：根据档案、目录等资讯，给予附加资料结构，例如： *:代表可执行档； /:代表目录； =:代表socket档案； |:代表FIFO档案；-h ：将档案容量以人类较易读的方式(例如GB, KB等等)列出来；-i ：列出inode号码，inode的意义下一章将会介绍；-l ：长资料串列出，包含档案的属性与权限等等资料；(常用)-n ：列出UID与GID而非使用者与群组的名称(UID与GID会在帐 管理提到！)-r ：将排序结果反向输出，例如：原本档名由小到大，反向则为由大到小；-R ：连同子目录内容一起列出来，等于该目录下的所有档案都会显示出来；-l : 长串显示资料内容； -S ：以档案容量大小排序，而不是用档名排序；-t ：依时间排序，而不是用档名。–color=never ：不要依据档案特性给予颜色显示；–color=always ：显示颜色–color=auto ：让系统自行依据设定来判断是否给予颜色–full-time ：以完整时间模式(包含年、月、日、时、分)输出–time={atime,ctime} ：输出access时间或改变权限属性时间(ctime) 而非内容变更时间(modification time) [root@study ~]# cp [-adfilprsu]来源档(source)目标档(destination)[root@study ~]# cp [options] source1 source2 source3 …. directory 选项与参数-a：此选项通常在复制目录时使用，它保留链接、文件属性，并复制目录下的所有内容。其作用等于dpR参数组合。-d：复制时保留链接。这里所说的链接相当于Windows系统中的快捷方式。-f：覆盖已经存在的目标文件而不给出提示。-i：与-f选项相反，在覆盖目标文件之前给出提示，要求用户确认是否覆盖，回答”y”时目标文件将被覆盖。-p：除复制文件的内容外，还把修改时间和访问权限也复制到新文件中。-r：若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。-l：不复制文件，只是生成链接文件。 最后需要注意的，如果来源档有两个以上，则最后一个目的档一定要是『目录』才行！ [root@study ~]# rm [-fir]档案或目录选项与参数：-f ：就是force的意思，忽略不存在的档案，不会出现警告讯息；-i ：互动模式，在删除前会询问使用者是否动作-r ：递回删除啊！最常用在目录的删除了！这是非常危险的选项！！！ [root@study ~]# mv [-fiu] source destination[root@study ~]# mv [options] source1 source2 source3 …. directory 选项与参数：-f ：force强制的意思，如果目标档案已经存在，不会询问而直接覆盖；-i ：若目标档案(destination)已经存在时，就会询问是否覆盖！-u ：若目标档案已经存在，且source比较新，才会更新(update) [root@study ~]# cat [-AbEnTv] 选项与参数：-A ：相当于-vET的整合选项，可列出一些特殊字符而不是空白而已；-b ：列出行号，仅针对非空白行做行号显示，空白行不标行号！-E ：将结尾的断行字元$显示出来；-n ：列印出行号，连同空白行也会有行号，与-b的选项不同；-T ：将[tab]按键以^I显示出来；-v ：列出一些看不出来的特殊字符 [root@study ~]# nl [-bnw]档案选项与参数：-b ：指定行号指定的方式，主要有两种： -ba ：表示不论是否为空行，也同样列出行号(类似cat -n)； -bt ：如果有空行，空的那一行不要列出行号(预设值)；-n ：列出行号表示的方法，主要有三种： -n ln ：行号在萤幕的最左方显示； -n rn ：行号在自己栏位的最右方显示，且不加0 ； -n rz ：行号在自己栏位的最右方显示，且加0 ；-w ：行号栏位的占用的字元数。 root@study ~]# touch [-acdmt]档案选项与参数：-a ：仅修订access time；-c ：仅修改档案的时间，若该档案不存在则不建立新档案；-d ：后面可以接欲修订的日期而不用目前的日期，也可以使用–date=”日期或时间”-m ：仅修改mtime ；-t ：后面可以接欲修订的时间而不用目前的时间，格式为[YYYYMMDDhhmm ] #在2014/06/10建立的内容(mtime) #在2015/06/15读取过内容(atime) #在2015/05/04更新过状态(ctime) [root@study ~]# whereis [-bmsu]档案或目录名选项与参数：-l :可以列出whereis会去查询的几个主要目录而已-b :只找binary格式的档案-m :只找在说明档manual路径下的档案-s :只找source来源档案-u :搜寻不在上述三个项目当中的其他特殊档案 [root@study ~]# locate [-ir] keyword 选项与参数：-i ：忽略大小写的差异；-c ：不输出档名，仅计算找到的档案数量-l ：仅输出几行的意思，例如输出五行则是-l 5-S ：输出locate所使用的资料库档案的相关资讯，包括该资料库纪录的档案/目录数量等-r ：后面可接正规表示法的显示方式 [root@study ~]# find [PATH] [option] [action] 选项与参数：1.与时间有关的选项：共有-atime, -ctime与-mtime ，以-mtime说明 -mtime n ：n为数字，意义为在n天之前的『一天之内』被更动过内容的档案； -mtime +n ：列出在n天之前(不含n天本身)被更动过内容的档案档名； -mtime - n ：列出在n天之内(含n天本身)被更动过内容的档案档名。 -newer file ：file为一个存在的档案，列出比file还要新的档案档2.与使用者或群组名称有关的参数： -uid n ：n为数字，这个数字是使用者的帐号ID，亦即UID ，这个UID是记录在 /etc/passwd里面与帐号名称对应的数字。这方面我们会在第四篇介绍。 -gid n ：n为数字，这个数字是群组名称的ID，亦即GID，这个GID记录在 /etc/group，相关的介绍我们会第四篇说明～ -user name ：name为使用者帐号名称喔！例如dmtsai -group name：name为群组名称喔，例如users ； -nouser ：寻找档案的拥有者不存在/etc/passwd的人！ -nogroup ：寻找档案的拥有群组不存在于/etc/group的档案！ 当你自行安装软体时，很可能该软体的属性当中并没有档案拥有者， 这是可能的！在这个时候，就可以使用-nouser与-nogroup搜寻。3.与档案权限及名称有关的参数： -name filename：搜寻档案名称为filename的档案； -size [+-]SIZE：搜寻比SIZE还要大(+)或小(-)的档案。这个SIZE的规格有： c:代表byte， k:代表1024bytes。所以，要找比50KB 还要大的档案，就是『 -size +50k 』 -type TYPE ：搜寻档案的类型为TYPE的，类型主要有：一般正规档案(f),装置档案(b, c), 目录(d),连结档(l), socket (s),及FIFO (p)等属性。 -perm mode ：搜寻档案权限『刚好等于』 mode的档案，这个mode为类似chmod 的属性值，举例来说， -rwsr-xr-x的属性为4755 ！ -perm -mode ：搜寻档案权限『必须要全部囊括mode的权限』的档案，举例来说， 我们要搜寻-rwxr–r– ，亦即0744的档案，使用-perm -0744， 当一个档案的权限为-rwsr-xr-x ，亦即4755时，也会被列出来， 因为-rwsr-xr-x的属性已经囊括了-rwxr–r–的属性了。 -perm /mode ：搜寻档案权限『包含任一mode的权限』的档案，举例来说，我们搜寻 -rwxr-xr-x ，亦即-perm /755时，但一个档案属性为-rw— —- 也会被列出来，因为他有-rw….的属性存在！ [dmtsai@study ~]$ gzip [-cdtv#]档名[dmtsai@study ~]$ zcat档名.gz 选项与参数：-c ：将压缩的资料输出到萤幕上，可透过资料流重导向来处理；-d ：解压缩的参数；-t ：可以用来检验一个压缩档的一致性～看看档案有无错误；-v ：可以显示出原档案/压缩档案的压缩比等资讯；-# ：# 为数字的意思，代表压缩等级，-1 最快，但是压缩比最差、-9 最慢，但是压缩比最好！预设是-6 [dmtsai@study ~]$ bzip2 [-cdkzv#]档名[dmtsai@study ~]$ bzcat档名.bz2 选项与参数：-c ：将压缩的过程产生的资料输出到萤幕上！-d ：解压缩的参数-k ：保留原始档案，而不会删除原始的档案喔！-z ：压缩的参数(预设值，可以不加)-v ：可以显示出原档案/压缩档案的压缩比等资讯；-# ：与gzip 同样的，都是在计算压缩比的参数， -9 最佳， -1 最快！ [dmtsai@study ~]$ tar [-z|-j|-J] [cv] [-f待建立的新档名] filename… &lt;==打包与压缩[dmtsai@study ~]$ tar [ -z|-j|-J] [tv] [-f既有的tar档名] &lt;==察看档名[dmtsai@study ~]$ tar [-z|-j|-J] [xv] [ -f既有的tar档名] [-C目录] &lt;==解压缩选项与参数：-c ：建立打包档案，可搭配-v 来察看过程中被打包的档名(filename)-t ：察看打包档案的内容含有哪些档名，重点在察看『档名』就是了；-x ：解打包或解压缩的功能，可以搭配-C (大写) 在特定目录解开 特别留意的是， -c, -t, -x 不可同时出现在一串指令列中。-z ：透过gzip 的支援进行压缩/解压缩：此时档名最好为.tar.gz-j ：透过bzip2 的支援进行压缩/解压缩：此时档名最好为.tar.bz2-J ：透过xz 的支援进行压缩/解压缩：此时档名最好为*.tar.xz 特别留意， -z, -j, -J 不可以同时出现在一串指令列中-v ：在压缩/解压缩的过程中，将正在处理的档名显示出来！-f filename：-f 后面要立刻接要被处理的档名！建议-f 单独写一个选项啰！(比较不会忘记)-C 目录：这个选项用在解压缩，若要在特定目录解压缩，可以使用这个选项。 其他后续练习会使用到的选项介绍：-p(小写) ：保留备份资料的原本权限与属性，常用于备份(-c)重要的设定档-P(大写) ：保留绝对路径，亦即允许备份资料中含有根目录存在之意；–exclude=FILE：在压缩的过程中，不要将FILE 打包！","link":"/2019/01/24/linux/"}],"tags":[{"name":"统计学","slug":"统计学","link":"/tags/统计学/"},{"name":"python","slug":"python","link":"/tags/python/"},{"name":"mysql","slug":"mysql","link":"/tags/mysql/"},{"name":"linux","slug":"linux","link":"/tags/linux/"}],"categories":[{"name":"数学","slug":"数学","link":"/categories/数学/"},{"name":"爬虫","slug":"爬虫","link":"/categories/爬虫/"},{"name":"sql","slug":"sql","link":"/categories/sql/"},{"name":"linux","slug":"linux","link":"/categories/linux/"}]}